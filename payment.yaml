- name: payment microservice
  hosts: payment
  become: yes
  tasks:
  - name: Installing python module
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: present
    loop:
    - python3
    - gcc
    - python3-devel

  - name: Create app directory 
    ansible.builtin.file:
      path: /app
      state: directory

  - name: ccreate roboshop system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true 
      home: /app

  - name: Downloading payment zip file
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/payment-v3.zip
      dest: /tmp/payment.zip



   # this module thinks file exist on ansible control server, needs to extract on to remote machine
  # remote_src: yes means files already exist in payment server
  - name: Unarchive a payment file
    ansible.builtin.unarchive:
      src: /tmp/payment.zip
      dest: /app
      remote_src: yes

  - name: Install depencies from requirements.txt
    ansible.builtin.pip:
      requirements: /app/requirements.txt
      executable: pip3.9
      args:
        chdir: /app
  
  - name: copy payment.service file
    ansible.builtin.copy:
      src: payment.service
      dest: /etc/systemd/system/payment.service
    
  - name: payment system deamon reload
    ansible.builtin.systemd_service:
      daemon_reload:  true

  - name: Start service httpd, if not started
    ansible.builtin.service:
      name: payment
      state: started
      enabled: yes
  
 #nohup ansible-playbook -i inventory.ini payment.yaml &>>  /home/ec2-user/paymnet.log & - this is run in background
    # we can store our logs 