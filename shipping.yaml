- name: shipping microservice
  hosts: shipping
  become: yes
  tasks:
  - name: install nodejs and mysql
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: present
    loop:
      - maven
      - mysql

  - name: install PyMySQL and cryptography  dependecies for python_with_mysql 
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - cryptography
    - PyMySQL

  - name: create roboshop system shipping
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true 
      home: /app


  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Downloading shipping zip file
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

   # this module thinks file exist on ansible control server, needs to extract on to remote machine
  # remote_src: yes means files already exist in shipping server
  - name: Unarchive a shipping file
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: Run Maven build using shell
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app     # it will move tot he app directory do the prcess and come out of it .

  - name: Rename or move a file using the shell module
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app 
  


  - name: copy shipping.service file
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
    
  - name: shipping system deamon reload
    ansible.builtin.systemd_service:
      daemon_reload:  true

  - name: Start service httpd, if not started
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes


  - name: import the db with root db_user
    tags: 
    - import   # we can run required part the of snippet by using the tags
    community.mysql.mysql_db:
      name: all #                     name may only be provided if state is dump or import.
      login_user: root
      login_password: RoboShop@1
      login_host: mysql.narendaws-84s.site
      state: import
      target: "{{ item }}"
      loop:
      - /app/db/schema.sql
      - /app/db/app-user.sql
      - /app/db/master-data.sql

  - name: start the service
    tags: 
    - import   # we can run required part the of snippet by using the tags
    ansible.builtin.service:
      name: shipping
      state: restarted


  # ansible-playbook -i inventory.ini shipping.yaml &>> /home/ec2-user/shipping.log & - this will run in backgroupnd
    # we can store our logs 

    