- name: shipping microservice
  hosts: shipping
  become: yes
  vars_prompt:
  - name: PASSWORD
    prompt: Please enter your passwordCRoboCShop@1C
    private: true
  tasks:
  - name: install nodejs and mysql
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: present
    loop:
      - maven
      - mysql

  - name: create roboshop system shipping
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true 
      home: /app


  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Downloading shipping zip file
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

   # this module thinks file exist on ansible control server, needs to extract on to remote machine
  # remote_src: yes means files already exist in shipping server
  - name: Unarchive a shipping file
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: Run Maven build using shell
    ansible.builtin.shell: mvn clean package

  - name: Rename or move a file using the shell module
    ansible.builtin.shell: mv target/shipping-1.0.jar shipping.jar 

  - name: copy shipping.service file
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
    
  - name: shipping system deamon reload
    ansible.builtin.systemd_service:
      daemon_reload:  true

  - name: Start service httpd, if not started
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes


  - name: Load Schema, Schema in database
    ansible.builtin.shell: mysql -h mysql.narendaws-84s.site -uroot -p{{ PASSWORD }} < /app/db/schema.sql

  - name: Create app user, MySQL expects a password authentication, Hence we need to create the user in mysql database for shipping app to connect.
    ansible.builtin.shell: mysql -h mysql.narendaws-84s.site -uroot -p{{ PASSWORD }}< /app/db/app-user.sql

  - name: Load Master Data, This includes the data of all the countries and their cities with distance to those cities.
    ansible.builtin.shell: mysql -h mysql.narendaws-84s.site -uroot -p{{ PASSWORD }} < /app/db/master-data.sql